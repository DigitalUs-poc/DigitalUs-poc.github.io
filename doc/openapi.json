{
  "openapi": "3.0.3",
  "info": {
    "title": "digitalUs themis",
    "version": "0.1",
    "x-logo": {
      "url": "https://app.digitalus.io/img/icons/favicon-64x64.png"
    }
  },
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "OAuth2 compatible token login, get an access token for future requests",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_api_v1_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/verify": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Verify Token",
        "description": "Verify access token",
        "operationId": "verify_token_api_v1_auth_verify_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Verify Token Api V1 Auth Verify Get",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create User With Token",
        "description": "Create new user using a token, without being logged in.",
        "operationId": "create_user_with_token_api_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/recover/{email}": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Recover Password",
        "description": "Password Recovery",
        "operationId": "recover_password_api_v1_auth_recover__email__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Email",
              "type": "string",
              "format": "email"
            },
            "name": "email",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/reset": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset Password",
        "description": "Reset password",
        "operationId": "reset_password_api_v1_auth_reset_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_password_api_v1_auth_reset_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Read User Me",
        "description": "Get current user.",
        "operationId": "read_user_me_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "auth"
        ],
        "summary": "Update User Me",
        "description": "Update own user.",
        "operationId": "update_user_me_api_v1_auth_me_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/me/admin": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Am I Admin",
        "description": "Get current user.",
        "operationId": "am_i_admin_api_v1_auth_me_admin_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Am I Admin Api V1 Auth Me Admin Get",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/me/usage": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get My Usage",
        "description": "Update own user.",
        "operationId": "get_my_usage_api_v1_auth_me_usage_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserQuota"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/me/quota": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get My Quota",
        "description": "Update own user.",
        "operationId": "get_my_quota_api_v1_auth_me_quota_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserQuota"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/me/sources": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get My Sources",
        "description": "Update own user.",
        "operationId": "get_my_sources_api_v1_auth_me_sources_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSources"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Update My Sources",
        "description": "Update own user.",
        "operationId": "update_my_sources_api_v1_auth_me_sources_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Sources",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/me/activate": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Activate User",
        "description": "(De)Activate my account",
        "operationId": "activate_user_api_v1_auth_me_activate_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flag"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/me/delete": {
      "delete": {
        "tags": [
          "auth"
        ],
        "summary": "Delete User",
        "description": "Delete my account",
        "operationId": "delete_user_api_v1_auth_me_delete_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flag"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/utils/health/": {
      "get": {
        "tags": [
          "utils"
        ],
        "summary": "Health",
        "description": "Health Check endpoint.",
        "operationId": "health_api_v1_auth_utils_health__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/search/": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Make Search",
        "description": "Create new report and forward to hermes.",
        "operationId": "make_search_api_v1_search__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/schedule/{seed_id}": {
      "get": {
        "tags": [
          "schedule"
        ],
        "summary": "Get Schedule For Seed",
        "description": "Return the stored Schedule for a seed ID",
        "operationId": "get_schedule_for_seed_api_v1_schedule__seed_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Seed Id",
              "type": "integer"
            },
            "name": "seed_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "schedule"
        ],
        "summary": "Set Schedule For Seed",
        "description": "Set a stored Schedule for a seed ID",
        "operationId": "set_schedule_for_seed_api_v1_schedule__seed_id__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Seed Id",
              "type": "integer"
            },
            "name": "seed_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schedule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/search/utils/health/": {
      "get": {
        "tags": [
          "utils"
        ],
        "summary": "Health",
        "description": "Health Check endpoint.",
        "operationId": "health_api_v1_search_utils_health__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/seed/summary": {
      "post": {
        "tags": [
          "seed"
        ],
        "summary": "Get Seeds Summary",
        "description": "Get the list of seeds along with latest report summary data",
        "operationId": "get_seeds_summary_api_v1_seed_summary_post",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 30
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FrontEndConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeedPage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/seed/{idx}": {
      "get": {
        "tags": [
          "seed"
        ],
        "summary": "Get Seed",
        "description": "Get a seed",
        "operationId": "get_seed_api_v1_seed__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seed"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "seed"
        ],
        "summary": "Delete Seed",
        "description": "Delete a seed. Propagates to reports",
        "operationId": "delete_seed_api_v1_seed__idx__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flag"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/seed/": {
      "get": {
        "tags": [
          "seed"
        ],
        "summary": "Get Seeds",
        "description": "Get the list of seeds",
        "operationId": "get_seeds_api_v1_seed__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 30
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Seeds Api V1 Seed  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Seed"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/seed/archive/{idx}": {
      "get": {
        "tags": [
          "seed"
        ],
        "summary": "Archive Seed",
        "description": "Archive a seed.",
        "operationId": "archive_seed_api_v1_seed_archive__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "seed"
        ],
        "summary": "Un Archive Report",
        "description": "Restore a seed from the archive.",
        "operationId": "un_archive_report_api_v1_seed_archive__idx__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/usage/day": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Get Usage Day",
        "description": "Retrieve analytics for this day.",
        "operationId": "get_usage_day_api_v1_report_usage_day_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/usage/month": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Get Usage Month",
        "description": "Retrieve analytics for this month.",
        "operationId": "get_usage_month_api_v1_report_usage_month_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Analytics"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Get Reports",
        "description": "Retrieve reports.",
        "operationId": "get_reports_api_v1_report__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Reports Api V1 Report  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/archived": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Get Archived",
        "description": "Retrieve reports.",
        "operationId": "get_archived_api_v1_report_archived_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Archived Api V1 Report Archived Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/summary/{idx}": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Get Report Summary",
        "description": "Get report summary by ID.",
        "operationId": "get_report_summary_api_v1_report_summary__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/seed/{seed_id}": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Get Reports For Seed",
        "description": "Get report summary history for seed ID.",
        "operationId": "get_reports_for_seed_api_v1_report_seed__seed_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Seed Id",
              "type": "integer"
            },
            "name": "seed_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Skip",
              "type": "integer",
              "default": 0
            },
            "name": "skip",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 30
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Reports For Seed Api V1 Report Seed  Seed Id  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/data/{idx}": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Get Report Data",
        "description": "Get full report data by ID.",
        "operationId": "get_report_data_api_v1_report_data__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/full/{idx}": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Get Full Report",
        "description": "Get full report data by ID.",
        "operationId": "get_full_report_api_v1_report_full__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullReport"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/see/{idx}": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Seen Report",
        "description": "Set a report seen.",
        "operationId": "seen_report_api_v1_report_see__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Seen Report Api V1 Report See  Idx  Get",
                  "type": "integer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/archive/{idx}": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Archive Report",
        "description": "Set a report seen.",
        "operationId": "archive_report_api_v1_report_archive__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Archive Report Api V1 Report Archive  Idx  Get",
                  "type": "integer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "report"
        ],
        "summary": "Un Archive Report",
        "description": "Set a report seen.",
        "operationId": "un_archive_report_api_v1_report_archive__idx__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Un Archive Report Api V1 Report Archive  Idx  Delete",
                  "type": "integer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/{idx}": {
      "delete": {
        "tags": [
          "report"
        ],
        "summary": "Delete Report",
        "description": "Delete a report.",
        "operationId": "delete_report_api_v1_report__idx__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Delete Report Api V1 Report  Idx  Delete",
                  "type": "boolean"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/raw/{idx}": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Report To Raw",
        "operationId": "report_to_raw_api_v1_report_raw__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/html/{idx}": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Report To Html",
        "operationId": "report_to_html_api_v1_report_html__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/pdf/{idx}": {
      "get": {
        "tags": [
          "report"
        ],
        "summary": "Html To Pdf",
        "operationId": "html_to_pdf_api_v1_report_pdf__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/report/utils/health/": {
      "get": {
        "tags": [
          "utils"
        ],
        "summary": "Health",
        "description": "Health Check endpoint.",
        "operationId": "health_api_v1_report_utils_health__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/notifications/length": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Get Notice Count",
        "description": "Retrieve total notices count.",
        "operationId": "get_notice_count_api_v1_notifications_length_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Notice Count Api V1 Notifications Length Get",
                  "type": "integer"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Read Recent Notices",
        "description": "Retrieve recent notices.",
        "operationId": "read_recent_notices_api_v1_notifications__get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Num",
              "type": "integer",
              "default": 5
            },
            "name": "num",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Recent Notices Api V1 Notifications  Get",
                  "type": "array",
                  "items": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/{idx}": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Read Notice",
        "description": "Get notice by id",
        "operationId": "read_notice_api_v1_notifications__idx__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Idx",
              "type": "integer"
            },
            "name": "idx",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notice"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/v1/notifications/seen": {
      "put": {
        "tags": [
          "notifications"
        ],
        "summary": "Seen Notice",
        "description": "Set notice as seen on date",
        "operationId": "seen_notice_api_v1_notifications_seen_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoticeUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notice"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Body_delete_user_api_v1_auth_adm__user_id__delete_post": {
        "title": "Body_delete_user_api_v1_auth_adm__user_id__delete_post",
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "title": "Password",
            "type": "string"
          }
        }
      },
      "Body_invite_bulk_api_v1_auth_adm_invite_bulk_post": {
        "title": "Body_invite_bulk_api_v1_auth_adm_invite_bulk_post",
        "required": [
          "password",
          "amount",
          "ttl"
        ],
        "type": "object",
        "properties": {
          "password": {
            "title": "Password",
            "type": "string"
          },
          "amount": {
            "title": "Amount",
            "type": "integer"
          },
          "ttl": {
            "title": "Ttl",
            "type": "integer"
          }
        }
      },
      "Body_invite_to_register_w_settings_api_v1_auth_adm_invite_s_post": {
        "title": "Body_invite_to_register_w_settings_api_v1_auth_adm_invite_s_post",
        "required": [
          "password",
          "invites"
        ],
        "type": "object",
        "properties": {
          "password": {
            "title": "Password",
            "type": "string"
          },
          "invites": {
            "title": "Invites",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invitation"
            }
          }
        }
      },
      "Body_invite_user_api_v1_auth_adm_invite_post": {
        "title": "Body_invite_user_api_v1_auth_adm_invite_post",
        "required": [
          "password",
          "email"
        ],
        "type": "object",
        "properties": {
          "password": {
            "title": "Password",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          }
        }
      },
      "Body_login_api_v1_auth_login_post": {
        "title": "Body_login_api_v1_auth_login_post",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        }
      },
      "Body_reset_password_api_v1_auth_reset_post": {
        "title": "Body_reset_password_api_v1_auth_reset_post",
        "required": [
          "token",
          "new_password"
        ],
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          },
          "new_password": {
            "title": "New Password",
            "type": "string"
          }
        }
      },
      "CreditConsume": {
        "title": "CreditConsume",
        "required": [
          "id",
          "report_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "report_id": {
            "title": "Report Id",
            "type": "integer"
          }
        }
      },
      "CreditRequest": {
        "title": "CreditRequest",
        "required": [
          "seed_id"
        ],
        "type": "object",
        "properties": {
          "seed_id": {
            "title": "Seed Id",
            "type": "integer"
          },
          "endpoints": {
            "title": "Endpoints",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreditReservation": {
        "title": "CreditReservation",
        "required": [
          "value",
          "id",
          "detail"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "type": "boolean"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        }
      },
      "EncodedToken": {
        "title": "EncodedToken",
        "required": [
          "value",
          "type"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        }
      },
      "Flag": {
        "title": "Flag",
        "required": [
          "flag"
        ],
        "type": "object",
        "properties": {
          "flag": {
            "title": "Flag",
            "type": "boolean"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Invitation": {
        "title": "Invitation",
        "required": [
          "email",
          "daily",
          "monthly"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "daily": {
            "title": "Daily",
            "type": "integer"
          },
          "monthly": {
            "title": "Monthly",
            "type": "integer"
          },
          "package_name": {
            "title": "Package Name",
            "type": "string"
          },
          "ttl": {
            "title": "Ttl",
            "type": "integer"
          }
        }
      },
      "Login": {
        "title": "Login",
        "required": [
          "token",
          "user"
        ],
        "type": "object",
        "properties": {
          "token": {
            "$ref": "#/components/schemas/EncodedToken"
          },
          "user": {
            "$ref": "#/components/schemas/UserLoggedIn"
          }
        }
      },
      "Msg": {
        "title": "Msg",
        "required": [
          "msg"
        ],
        "type": "object",
        "properties": {
          "msg": {
            "title": "Msg",
            "type": "string"
          }
        }
      },
      "Token": {
        "title": "Token",
        "required": [
          "value",
          "created",
          "expires"
        ],
        "type": "object",
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "daily": {
            "title": "Daily",
            "type": "integer",
            "default": 10
          },
          "monthly": {
            "title": "Monthly",
            "type": "integer",
            "default": 310
          },
          "package_name": {
            "title": "Package Name",
            "type": "string"
          },
          "ttl": {
            "title": "Ttl",
            "type": "integer"
          },
          "created": {
            "title": "Created",
            "type": "integer"
          },
          "expires": {
            "title": "Expires",
            "type": "integer"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          }
        }
      },
      "TokenList": {
        "title": "TokenList",
        "type": "object",
        "properties": {
          "tokens": {
            "title": "Tokens",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "User": {
        "title": "User",
        "required": [
          "id",
          "created"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "full_name": {
            "title": "Full Name",
            "type": "string"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "created": {
            "title": "Created",
            "type": "integer"
          },
          "last_login": {
            "title": "Last Login",
            "type": "integer"
          },
          "settings": {
            "$ref": "#/components/schemas/UserSettings"
          },
          "deleted": {
            "title": "Deleted",
            "type": "boolean",
            "default": false
          }
        }
      },
      "UserCreate": {
        "title": "UserCreate",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "full_name": {
            "title": "Full Name",
            "type": "string"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        }
      },
      "UserLoggedIn": {
        "title": "UserLoggedIn",
        "required": [
          "email",
          "is_active",
          "is_superuser"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean"
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean"
          }
        }
      },
      "UserQuota": {
        "title": "UserQuota",
        "type": "object",
        "properties": {
          "day": {
            "title": "Day",
            "type": "integer",
            "default": 0
          },
          "month": {
            "title": "Month",
            "type": "integer",
            "default": 0
          }
        }
      },
      "UserRegister": {
        "title": "UserRegister",
        "required": [
          "email",
          "password",
          "token"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "full_name": {
            "title": "Full Name",
            "type": "string"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "token": {
            "title": "Token",
            "type": "string"
          }
        }
      },
      "UserSettings": {
        "title": "UserSettings",
        "type": "object",
        "properties": {
          "quota_day": {
            "title": "Quota Day",
            "type": "integer",
            "default": 0
          },
          "quota_month": {
            "title": "Quota Month",
            "type": "integer",
            "default": 0
          },
          "sources": {
            "title": "Sources",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "subscribed": {
            "title": "Subscribed",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "UserSources": {
        "title": "UserSources",
        "type": "object",
        "properties": {
          "sources": {
            "title": "Sources",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "UserUpdate": {
        "title": "UserUpdate",
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "full_name": {
            "title": "Full Name",
            "type": "string"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "Count": {
        "title": "Count",
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          }
        }
      },
      "RepeatEnd": {
        "title": "RepeatEnd",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RepeatEndType"
          },
          "value": {
            "title": "Value",
            "type": "string"
          }
        }
      },
      "RepeatEndType": {
        "title": "RepeatEndType",
        "enum": [
          "forever",
          "until",
          "after"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Request": {
        "title": "Request",
        "required": [
          "seed",
          "settings"
        ],
        "type": "object",
        "properties": {
          "seed": {
            "$ref": "#/components/schemas/SeedBase"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          }
        }
      },
      "Schedule": {
        "title": "Schedule",
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ScheduleType"
          },
          "every": {
            "title": "Every",
            "type": "integer"
          },
          "on": {
            "title": "On",
            "anyOf": [
              {
                "$ref": "#/components/schemas/Weekdays"
              },
              {
                "type": "integer"
              }
            ]
          },
          "end": {
            "$ref": "#/components/schemas/RepeatEnd"
          }
        }
      },
      "ScheduleType": {
        "title": "ScheduleType",
        "enum": [
          "none",
          "daily",
          "weekly",
          "monthly",
          "yearly"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "SeedBase": {
        "title": "SeedBase",
        "type": "object",
        "properties": {
          "first_name": {
            "title": "First Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "middle_name": {
            "title": "Middle Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_name": {
            "title": "Last Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "birthday": {
            "title": "Birthday",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "title": "Email",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "image": {
            "title": "Image",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Settings": {
        "title": "Settings",
        "type": "object",
        "properties": {
          "endpoints": {
            "title": "Endpoints",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Weekdays": {
        "title": "Weekdays",
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Analytics": {
        "title": "Analytics",
        "required": [
          "user_id",
          "start",
          "end"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "start": {
            "title": "Start",
            "type": "integer"
          },
          "end": {
            "title": "End",
            "type": "integer"
          },
          "numberOfSearches": {
            "title": "Numberofsearches",
            "type": "integer",
            "default": 0
          },
          "totalDuration": {
            "title": "Totalduration",
            "type": "integer",
            "default": 0
          }
        }
      },
      "Attribute": {
        "title": "Attribute",
        "required": [
          "name",
          "values"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "values": {
            "title": "Values",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Value"
            }
          }
        }
      },
      "EndpointsElement": {
        "title": "EndpointsElement",
        "required": [
          "count",
          "name"
        ],
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        }
      },
      "FrontEndConfig": {
        "title": "FrontEndConfig",
        "type": "object",
        "properties": {
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportStatusFrontEnd"
            },
            "default": []
          },
          "tag": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags"
            },
            "default": []
          }
        }
      },
      "FullReport": {
        "title": "FullReport",
        "required": [
          "seed",
          "header",
          "data"
        ],
        "type": "object",
        "properties": {
          "seed": {
            "$ref": "#/components/schemas/Seed"
          },
          "header": {
            "$ref": "#/components/schemas/Report"
          },
          "data": {
            "$ref": "#/components/schemas/ReportData"
          }
        }
      },
      "Header": {
        "title": "Header",
        "required": [
          "iteration",
          "search_id",
          "status"
        ],
        "type": "object",
        "properties": {
          "iteration": {
            "title": "Iteration",
            "type": "integer"
          },
          "search_id": {
            "title": "Search Id",
            "type": "integer"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        }
      },
      "HistoryElement": {
        "title": "HistoryElement",
        "required": [
          "profile_id"
        ],
        "type": "object",
        "properties": {
          "profile_id": {
            "title": "Profile Id",
            "type": "integer"
          },
          "values": {
            "title": "Values",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "ID": {
        "title": "ID",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "Log": {
        "title": "Log",
        "type": "object",
        "properties": {
          "endpoints": {
            "title": "Endpoints",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EndpointsElement"
            },
            "default": []
          },
          "history": {
            "title": "History",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoryElement"
            },
            "default": []
          }
        }
      },
      "Notice": {
        "title": "Notice",
        "required": [
          "user_id",
          "payload",
          "id",
          "created"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "payload": {
            "$ref": "#/components/schemas/NoticePayload"
          },
          "seen_on": {
            "title": "Seen On",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "created": {
            "title": "Created",
            "type": "integer"
          }
        }
      },
      "NoticePayload": {
        "title": "NoticePayload",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NoticePayloadType"
              }
            ],
            "default": "UNKNOWN"
          }
        }
      },
      "NoticePayloadType": {
        "title": "NoticePayloadType",
        "enum": [
          "UNKNOWN",
          "REPORT",
          "<class 'app.schemas.notice.NoticePayloadType.Config'>"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "NoticeUpdate": {
        "title": "NoticeUpdate",
        "required": [
          "user_id",
          "seen_on",
          "id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "payload": {
            "$ref": "#/components/schemas/NoticePayload"
          },
          "seen_on": {
            "title": "Seen On",
            "type": "integer"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "Origin": {
        "title": "Origin",
        "type": "object",
        "properties": {
          "domain": {
            "title": "Domain",
            "type": "string",
            "default": "seed"
          },
          "iteration": {
            "title": "Iteration",
            "type": "integer",
            "default": 0
          },
          "profile_id": {
            "title": "Profile Id",
            "type": "string",
            "default": "__user__"
          },
          "timestamp": {
            "title": "Timestamp",
            "type": "integer",
            "default": 0
          }
        }
      },
      "Profile": {
        "title": "Profile",
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "title": "Attributes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          }
        }
      },
      "Recurrence": {
        "title": "Recurrence",
        "required": [
          "id",
          "recurrent"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "recurrent": {
            "title": "Recurrent",
            "type": "boolean"
          }
        }
      },
      "Report": {
        "title": "Report",
        "required": [
          "id",
          "user_id",
          "seed_id",
          "created"
        ],
        "type": "object",
        "properties": {
          "search_id": {
            "title": "Search Id",
            "type": "integer"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportStatusBackEnd"
              }
            ],
            "default": "NEW"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "seed_id": {
            "title": "Seed Id",
            "type": "integer"
          },
          "credit_id": {
            "title": "Credit Id",
            "type": "integer"
          },
          "created": {
            "title": "Created",
            "type": "integer"
          },
          "modified": {
            "title": "Modified",
            "type": "integer"
          },
          "seen_on": {
            "title": "Seen On",
            "type": "integer"
          },
          "archived_on": {
            "title": "Archived On",
            "type": "integer"
          },
          "whitelist": {
            "title": "Whitelist",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "blacklist": {
            "title": "Blacklist",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status_fe": {
            "$ref": "#/components/schemas/ReportStatusFrontEnd"
          }
        }
      },
      "ReportData": {
        "title": "ReportData",
        "required": [
          "id",
          "created"
        ],
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "images": {
            "title": "Images",
            "type": "array",
            "items": {}
          },
          "search_result": {
            "title": "Search Result",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "source_count": {
            "title": "Source Count",
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "searched_sources": {
            "title": "Searched Sources",
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "created": {
            "title": "Created",
            "type": "integer"
          },
          "modified": {
            "title": "Modified",
            "type": "integer"
          }
        }
      },
      "ReportProvision": {
        "title": "ReportProvision",
        "required": [
          "user_id",
          "seed_id",
          "credit_id",
          "whitelist"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "seed_id": {
            "title": "Seed Id",
            "type": "integer"
          },
          "credit_id": {
            "title": "Credit Id",
            "type": "integer"
          },
          "whitelist": {
            "title": "Whitelist",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReportStatusBackEnd": {
        "title": "ReportStatusBackEnd",
        "enum": [
          "NEW",
          "CREATED",
          "ONGOING",
          "FINISHED",
          "CANCELLED",
          "ERROR",
          "ABORT_ON_SELECT",
          "ABORT_ON_ITERATION"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ReportStatusFrontEnd": {
        "title": "ReportStatusFrontEnd",
        "enum": [
          "PENDING",
          "COMPLETED",
          "CANCELLED",
          "ERROR"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Result": {
        "title": "Result",
        "required": [
          "header",
          "log",
          "profile",
          "settings"
        ],
        "type": "object",
        "properties": {
          "header": {
            "$ref": "#/components/schemas/Header"
          },
          "log": {
            "$ref": "#/components/schemas/Log"
          },
          "others": {
            "title": "Others",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Profile"
            },
            "default": []
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings1"
          }
        }
      },
      "Seed": {
        "title": "Seed",
        "required": [
          "id",
          "user_id",
          "created"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "title": "First Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "middle_name": {
            "title": "Middle Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_name": {
            "title": "Last Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "birthday": {
            "title": "Birthday",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "title": "Email",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "image": {
            "title": "Image",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recurrent": {
            "title": "Recurrent",
            "type": "boolean",
            "default": false
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "created": {
            "title": "Created",
            "type": "integer"
          },
          "modified": {
            "title": "Modified",
            "type": "integer"
          },
          "archived": {
            "title": "Archived",
            "type": "integer"
          },
          "endpoints": {
            "title": "Endpoints",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SeedCreate": {
        "title": "SeedCreate",
        "required": [
          "first_name",
          "last_name",
          "recurrent",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "first_name": {
            "title": "First Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "middle_name": {
            "title": "Middle Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_name": {
            "title": "Last Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "birthday": {
            "title": "Birthday",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "title": "Email",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "image": {
            "title": "Image",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recurrent": {
            "title": "Recurrent",
            "type": "boolean"
          },
          "user_id": {
            "title": "User Id",
            "type": "integer"
          },
          "avatar_url": {
            "title": "Avatar Url",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "endpoints": {
            "title": "Endpoints",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SeedPage": {
        "title": "SeedPage",
        "required": [
          "skip",
          "limit",
          "count",
          "total",
          "items"
        ],
        "type": "object",
        "properties": {
          "skip": {
            "title": "Skip",
            "type": "integer"
          },
          "limit": {
            "title": "Limit",
            "type": "integer"
          },
          "count": {
            "title": "Count",
            "type": "integer"
          },
          "total": {
            "title": "Total",
            "type": "integer"
          },
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeedSummary"
            }
          }
        }
      },
      "SeedSummary": {
        "title": "SeedSummary",
        "required": [
          "seed",
          "header"
        ],
        "type": "object",
        "properties": {
          "seed": {
            "$ref": "#/components/schemas/Seed"
          },
          "header": {
            "$ref": "#/components/schemas/Report"
          }
        }
      },
      "Settings1": {
        "title": "Settings",
        "type": "object",
        "properties": {
          "attribute_black_list": {
            "title": "Attribute Black List",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "domain_black_list": {
            "title": "Domain Black List",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "source_black_list": {
            "title": "Source Black List",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "endpoint_black_list": {
            "title": "Endpoint Black List",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "Tags": {
        "title": "Tags",
        "enum": [
          "pep",
          "sanction",
          "crime",
          "news",
          "<class 'app.schemas.hestia.queries.Tags.Config'>"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Value": {
        "title": "Value",
        "required": [
          "origin",
          "value"
        ],
        "type": "object",
        "properties": {
          "confidence": {
            "title": "Confidence",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "number"
              }
            ],
            "default": 0
          },
          "origin": {
            "title": "Origin",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Origin"
            }
          },
          "value": {
            "title": "Value",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/auth/login"
          }
        }
      }
    }
  }
}